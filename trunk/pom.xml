<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.jahia.loganalyzer</groupId>
    <artifactId>loganalyzer</artifactId>
    <packaging>jar</packaging>
    <version>0.3</version>
    <name>Jahia Log Analyzer</name>
    <description>Jahia log analyzing tool</description>
    <inceptionYear>2007</inceptionYear>
    <url>http://server5.jahia.com/~loom/loganalyzer</url>
    <organization>
        <name>Jahia</name>
        <url>http://www.jahia.com</url>
    </organization>

    <scm>
        <connection>scm:svn:https://jahia.mine.nu/svn/jahia_loganalyzer</connection>
        <developerConnection>scm:svn:http://svn.jahia.org/svn/jahia_loganalyzer</developerConnection>
        <url>http://svn.jahia.org/svn/jahia_loganalyzer</url>
    </scm>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sf.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>1.7</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.jgoodies</groupId>
            <artifactId>looks</artifactId>
            <version>2.1.2</version>
        </dependency>
        <dependency>
            <groupId>jgoodies</groupId>
            <artifactId>forms</artifactId>
            <version>1.0.5</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
            <version>1.5</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>org.jahia.loganalyzer.gui.swing.LogAnalyzerMainDialog</mainClass>
                            <addClasspath>true</addClasspath>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Implementation-Build>${buildNumber}</Implementation-Build>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactId>${project.artifactId}-build${buildNumber}</shadedArtifactId>
                            <filters>
                                <filter>
                                    <artifact>commons-beanutils:commons-beanutils</artifact>
                                    <excludes>
                                        <exclude>org/apache/commons/collections/**</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <artifactSet>
                                <excludes>
                                    <exclude>classworlds:classworlds</exclude>
                                    <exclude>junit:junit</exclude>
                                    <exclude>jmock:jmock</exclude>
                                    <exclude>xml-apis:xml-apis</exclude>
                                    <exclude>commons-beanutils:commons-beanutils-core</exclude>
                                </excludes>
                            </artifactSet>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ComponentsXmlResourceTransformer"/>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.0-beta-3</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                    <useLastCommittedRevision>true</useLastCommittedRevision>
                    <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.codehaus.mojo.webstart</groupId>
                <artifactId>webstart-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jnlp</goal>
                            <!-- use jnlp, jnlp-inline or jnlp-single as appropriate -->
                        </goals>
                    </execution>
                </executions>
                <configuration>

                    <!-- JNLP generation -->
                    <jnlp>
                        <!-- default values -->
                        <!--inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath-->
                        <!--inputTemplate>src/main/jnlp/template.vm</inputTemplate--> <!-- relative to inputTemplateResourcePath -->
                        <!--outputFile>app.jnlp</outputFile--> <!-- defaults to launch.jnlp -->

                        <!-- used to automatically identify the jar containing the main class. -->
                        <!-- this is perhaps going to change -->
                        <mainClass>org.jahia.loganalyzer.gui.swing.LogAnalyzerMainDialog</mainClass>
                    </jnlp>

                    <!--outputDirectory></outputDirectory--> <!-- not required?? -->

                    <!--
                    Set to true to exclude all transitive dependencies. Default is false.
                    -->
                    <excludeTransitive>false</excludeTransitive>

                    <!-- The path where the libraries are stored within the jnlp structure. not required. by default the libraries are within the working directory -->
                    <!--libPath>lib</libPath-->

                    <!-- [optional] transitive dependencies filter - if omitted, all transitive dependencies are included -->
                    <dependencies>
                        <!-- Note that only groupId and artifactId must be specified here. because of a limitation of the Include/ExcludesArtifactFilter -->
                        <!--
                        <includes>
                           <include>commons-logging:commons-logging</include>
                           <include>commons-cli:commons-cli</include>
                        </includes>
                        -->
                        <!-- excludes>
                           <exclude></exclude>
                        <excludes-->
                    </dependencies>

                    <!--resourcesDirectory>${project.basedir}/src/main/jnlp/resources</resourcesDirectory--> <!-- default value -->


                    <!-- SIGNING -->
                    <!-- defining this will automatically sign the jar and its dependencies, if necessary -->
                    <sign>
                        <keystore>jahia</keystore>
                        <keypass>jahia123</keypass>
                        <!-- we need to override passwords easily from the command line. ${keypass} -->
                        <storepass>jahia123</storepass>
                        <!-- ${storepass} -->
                        <!--storetype>fillme</storetype-->
                        <alias>jahiaLogAnalyzer</alias>

                        <validity>365</validity>

                        <!-- only required for generating the keystore -->
                        <dnameCn>Serge Huber</dnameCn>
                        <dnameOu>Products</dnameOu>
                        <dnameO>Jahia SA</dnameO>
                        <dnameL>Geneva</dnameL>
                        <dnameSt>Geneva</dnameSt>
                        <dnameC>CH</dnameC>

                        <verify>true</verify>
                        <!-- verify that the signing operation succeeded -->

                        <!-- KEYSTORE MANAGEMENT -->
                        <keystoreConfig>
                            <delete>true</delete>
                            <!-- delete the keystore -->
                            <gen>true</gen>
                            <!-- optional shortcut to generate the store. -->
                        </keystoreConfig>
                    </sign>

                    <!-- BUILDING PROCESS -->

                    <pack200>true</pack200>
                    <gzip>true</gzip>
                    <!-- default force when pack200 false, true when pack200 selected ?? -->

                    <!-- causes a version attribute to be output in each jar resource element, optional, default is false -->
                    <outputJarVersions>false</outputJarVersions>

                    <!--install>false</install--> <!-- not yet supported -->
                    <verbose>true</verbose>

                </configuration>
            </plugin>

        </plugins>
    </build>
</project>
